name: release, IntelliJ-Haxe-plugin


on:
  branches:
    - 'master'
    - 'develop'
    - 'feature/*' # todo remove
  push:
    tags:
      - "[0-9]+.[0-9]+.[0-9]+" # trigger on  tags that matches version numbers ex. 1.3.10

jobs:
  build:
    name: Build Release
    strategy:
      fail-fast: true # cancel all builds if one fails.
      matrix:
        IDEA_VERSION: [2020.2, 2020.1.4,2019.3.5,2018.3.6]
        OS: [macOS-latest, ubuntu-latest, windows-latest]

    runs-on: ${{ matrix.OS }}

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
          architecture: x64

      - name: Set up Haxe
        uses: krdlab/setup-haxe@v1
        with:
          haxe-version: 4.1.3

      - name: Test haxe
        run: haxe -version

      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle

      - name: Cache plugin downloads
        uses: actions/cache@v2
        with:
          path: $GITHUB_WORKSPACE/dependencies
          key: ${{ matrix.IDEA_VERSION }}-downloads-${{ hashFiles('downloads/**') }}
          restore-keys: ${{ matrix.IDEA_VERSION }}-downloads

      - name: Cache intelliJ downloads
        uses: actions/cache@v2
        with:
          path: $GITHUB_WORKSPACE/idea-IU
          key: ${{ matrix.IDEA_VERSION }}-idea-${{ hashFiles('ideaIU-${{ matrix.IDEA_VERSION }}/**') }}
          restore-keys: ${{ matrix.IDEA_VERSION }}-idea

      - name: Build with Gradle
        run: gradle clean build verifyPlugin -PtargetVersion="${{ matrix.IDEA_VERSION }}"

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: true
          prerelease: false
      - name: Upload 2020 Release Asset
        id: upload-release-asset-2020
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./intellij-haxe-2020.jar
          asset_name: intellij-haxe-2020.jar
          asset_content_type: application/java-archive
      - name: Upload 2019 Release Asset
        id: upload-release-asset-2019
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./intellij-haxe-2019.jar
          asset_name: intellij-haxe-2019.jar
          asset_content_type: application/java-archive
      - name: Upload 2018 Release Asset
        id: upload-release-asset-2018
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./intellij-haxe-2018.jar
          asset_name: intellij-haxe-2018.jar
          asset_content_type: application/java-archive

