name: Pre-release, IntelliJ-Haxe-plugin


on:
  push:
    branches:
      - 'master'
      - 'develop'
      - 'feature/*' # todo remove

jobs:
  prepare:
    name: Create Pre-release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
    - name: Get short SHA
      id: short_sha
      run: echo "::set-output name=sha8::$(echo ${GITHUB_SHA} | cut -c1-8)"

    - name: Create Pre-release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.sha }}
        release_name: Beta build (${{ steps.short_sha.outputs.sha8 }})
        draft: true
        prerelease: true

  build:
    name: Build and upload artifacts
    strategy:
      fail-fast: false # cancel all builds if one fails.
      matrix:
        IDEA_VERSION: [2020.2, 2020.1.4,2019.3.5,2018.3.6]
    needs: prepare
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
          architecture: x64

      - name: Set up Haxe
        uses: krdlab/setup-haxe@v1
        with:
          haxe-version: 4.1.3

      - name: Test haxe
        run: haxe -version

      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle

      - name: Cache plugin downloads
        uses: actions/cache@v2
        with:
          path: $GITHUB_WORKSPACE/dependencies
          key: ${{ matrix.IDEA_VERSION }}-downloads-${{ hashFiles('downloads/**') }}
          restore-keys: ${{ matrix.IDEA_VERSION }}-downloads

      - name: Cache intelliJ downloads
        uses: actions/cache@v2
        with:
          path: $GITHUB_WORKSPACE/idea-IU
          key: ${{ matrix.IDEA_VERSION }}-idea-${{ hashFiles('ideaIU-${{ matrix.IDEA_VERSION }}/**') }}
          restore-keys: ${{ matrix.IDEA_VERSION }}-idea

      - name: Build with Gradle
        run: gradle clean build  verifyPlugin -PtargetVersion="${{ matrix.IDEA_VERSION }}" -x test


      - name: Find assets
        id: find_assets
        run: |
          ARTIFACT_PATHNAME=$(ls *.jar | head -n 1)
          ARTIFACT_NAME=$(basename $ARTIFACT_PATHNAME)
          mv $ARTIFACT_PATHNAME  ${IDEA_VERSION}.jar
          echo ::set-output name=artifact_name::${${IDEA_VERSION}.jar}
          echo ::set-output name=artifact_pathname::${ARTIFACT_PATHNAME}


      - name: Upload Asset
        id: upload-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.prepare.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ${{ steps.find_assets.outputs.artifact_pathname }}
          asset_name: ${{ steps.find_assets.outputs.artifact_name }}
          asset_content_type: application/java-archive


