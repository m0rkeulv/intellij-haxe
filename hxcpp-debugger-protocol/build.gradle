/*
 * Copyright 2000-2013 JetBrains s.r.o.
 * Copyright 2014-2018 AS3Boyan
 * Copyright 2014-2014 Elias Ku
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Source generation tested and working with Haxe Compiler 3.4.7
 */

runIde.enabled = false
patchPluginXml.enabled = false
verifyPlugin.enabled = false

ext.hxcppGeneratedFolder = "src/generated/java"
ext.hxcppSrcFolder = "src/main/haxe"

sourceSets.main.java.srcDir  "$hxcppGeneratedFolder/src"



def findHaxeVersion() {
    try{
    new ByteArrayOutputStream().withStream { os ->
        ext.hxcppSrcFolder = exec {
            commandLine  'haxe', '-version'
            standardOutput = os
        }
        ext.haxeVersion = os.toString()
    }
    }catch (Exception e)  {
        ext.haxeVersion = null
    }
}
findHaxeVersion()

task installHxJava(group: "hxcpp") {
    doLast {
        exec {
            commandLine 'haxelib', 'install', 'hxjava'
        }
    }
}
task installHxcppDebugger(group: "hxcpp") {
    doLast {
        exec {
            commandLine 'haxelib', 'install', 'hxcpp-debugger'
        }
    }

}

task generateDebuggerJavaSource(type: Exec, group: "hxcpp") {
    dependsOn("installHxJava")
    dependsOn("installHxcppDebugger")

    inputs.file "${hxcppSrcFolder}/JavaProtocol.hx"
    outputs.dir "${hxcppGeneratedFolder}/src"

    workingDir 'src/main/haxe/'
    commandLine 'haxe', '-cp', '..', '-java', '../../generated/java/', '-main', 'JavaProtocol', '-lib', 'hxcpp-debugger'
}

clean.dependsOn('cleanGenerated')
task cleanGenerated(type: Delete, group: 'generate') {
    delete "$hxcppGeneratedFolder"
}

cleanGenerated.onlyIf {haxeVersion != null}
generateDebuggerJavaSource.onlyIf {haxeVersion != null}
installHxcppDebugger.onlyIf {haxeVersion != null}
installHxJava.onlyIf {haxeVersion != null}

compileJava.dependsOn('generateDebuggerJavaSource')